# coding: utf-8

"""
    Amun API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class InspectionJobLogResponseLogOsRelease(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ansi_color': 'str',
        'bug_report_url': 'str',
        'cpe_name': 'str',
        'documentation_url': 'str',
        'home_url': 'str',
        'id': 'str',
        'logo': 'str',
        'name': 'str',
        'platform_id': 'str',
        'pretty_name': 'str',
        'privacy_policy_url': 'str',
        'redhat_bugzilla_product': 'str',
        'redhat_bugzilla_product_version': 'str',
        'redhat_support_product': 'str',
        'redhat_support_product_version': 'str',
        'support_url': 'str',
        'variant': 'str',
        'variant_id': 'str',
        'version': 'str',
        'version_codename': 'str',
        'version_id': 'str'
    }

    attribute_map = {
        'ansi_color': 'ansi_color',
        'bug_report_url': 'bug_report_url',
        'cpe_name': 'cpe_name',
        'documentation_url': 'documentation_url',
        'home_url': 'home_url',
        'id': 'id',
        'logo': 'logo',
        'name': 'name',
        'platform_id': 'platform_id',
        'pretty_name': 'pretty_name',
        'privacy_policy_url': 'privacy_policy_url',
        'redhat_bugzilla_product': 'redhat_bugzilla_product',
        'redhat_bugzilla_product_version': 'redhat_bugzilla_product_version',
        'redhat_support_product': 'redhat_support_product',
        'redhat_support_product_version': 'redhat_support_product_version',
        'support_url': 'support_url',
        'variant': 'variant',
        'variant_id': 'variant_id',
        'version': 'version',
        'version_codename': 'version_codename',
        'version_id': 'version_id'
    }

    def __init__(self, ansi_color=None, bug_report_url=None, cpe_name=None, documentation_url=None, home_url=None, id=None, logo=None, name=None, platform_id=None, pretty_name=None, privacy_policy_url=None, redhat_bugzilla_product=None, redhat_bugzilla_product_version=None, redhat_support_product=None, redhat_support_product_version=None, support_url=None, variant=None, variant_id=None, version=None, version_codename=None, version_id=None):  # noqa: E501
        """InspectionJobLogResponseLogOsRelease - a model defined in Swagger"""  # noqa: E501
        self._ansi_color = None
        self._bug_report_url = None
        self._cpe_name = None
        self._documentation_url = None
        self._home_url = None
        self._id = None
        self._logo = None
        self._name = None
        self._platform_id = None
        self._pretty_name = None
        self._privacy_policy_url = None
        self._redhat_bugzilla_product = None
        self._redhat_bugzilla_product_version = None
        self._redhat_support_product = None
        self._redhat_support_product_version = None
        self._support_url = None
        self._variant = None
        self._variant_id = None
        self._version = None
        self._version_codename = None
        self._version_id = None
        self.discriminator = None
        if ansi_color is not None:
            self.ansi_color = ansi_color
        if bug_report_url is not None:
            self.bug_report_url = bug_report_url
        if cpe_name is not None:
            self.cpe_name = cpe_name
        if documentation_url is not None:
            self.documentation_url = documentation_url
        if home_url is not None:
            self.home_url = home_url
        if id is not None:
            self.id = id
        if logo is not None:
            self.logo = logo
        if name is not None:
            self.name = name
        if platform_id is not None:
            self.platform_id = platform_id
        if pretty_name is not None:
            self.pretty_name = pretty_name
        if privacy_policy_url is not None:
            self.privacy_policy_url = privacy_policy_url
        if redhat_bugzilla_product is not None:
            self.redhat_bugzilla_product = redhat_bugzilla_product
        if redhat_bugzilla_product_version is not None:
            self.redhat_bugzilla_product_version = redhat_bugzilla_product_version
        if redhat_support_product is not None:
            self.redhat_support_product = redhat_support_product
        if redhat_support_product_version is not None:
            self.redhat_support_product_version = redhat_support_product_version
        if support_url is not None:
            self.support_url = support_url
        if variant is not None:
            self.variant = variant
        if variant_id is not None:
            self.variant_id = variant_id
        if version is not None:
            self.version = version
        if version_codename is not None:
            self.version_codename = version_codename
        if version_id is not None:
            self.version_id = version_id

    @property
    def ansi_color(self):
        """Gets the ansi_color of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The ansi_color of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._ansi_color

    @ansi_color.setter
    def ansi_color(self, ansi_color):
        """Sets the ansi_color of this InspectionJobLogResponseLogOsRelease.


        :param ansi_color: The ansi_color of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._ansi_color = ansi_color

    @property
    def bug_report_url(self):
        """Gets the bug_report_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The bug_report_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._bug_report_url

    @bug_report_url.setter
    def bug_report_url(self, bug_report_url):
        """Sets the bug_report_url of this InspectionJobLogResponseLogOsRelease.


        :param bug_report_url: The bug_report_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._bug_report_url = bug_report_url

    @property
    def cpe_name(self):
        """Gets the cpe_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The cpe_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._cpe_name

    @cpe_name.setter
    def cpe_name(self, cpe_name):
        """Sets the cpe_name of this InspectionJobLogResponseLogOsRelease.


        :param cpe_name: The cpe_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._cpe_name = cpe_name

    @property
    def documentation_url(self):
        """Gets the documentation_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The documentation_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._documentation_url

    @documentation_url.setter
    def documentation_url(self, documentation_url):
        """Sets the documentation_url of this InspectionJobLogResponseLogOsRelease.


        :param documentation_url: The documentation_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._documentation_url = documentation_url

    @property
    def home_url(self):
        """Gets the home_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The home_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._home_url

    @home_url.setter
    def home_url(self, home_url):
        """Sets the home_url of this InspectionJobLogResponseLogOsRelease.


        :param home_url: The home_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._home_url = home_url

    @property
    def id(self):
        """Gets the id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InspectionJobLogResponseLogOsRelease.


        :param id: The id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def logo(self):
        """Gets the logo of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The logo of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this InspectionJobLogResponseLogOsRelease.


        :param logo: The logo of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._logo = logo

    @property
    def name(self):
        """Gets the name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InspectionJobLogResponseLogOsRelease.


        :param name: The name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def platform_id(self):
        """Gets the platform_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The platform_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._platform_id

    @platform_id.setter
    def platform_id(self, platform_id):
        """Sets the platform_id of this InspectionJobLogResponseLogOsRelease.


        :param platform_id: The platform_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._platform_id = platform_id

    @property
    def pretty_name(self):
        """Gets the pretty_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The pretty_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._pretty_name

    @pretty_name.setter
    def pretty_name(self, pretty_name):
        """Sets the pretty_name of this InspectionJobLogResponseLogOsRelease.


        :param pretty_name: The pretty_name of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._pretty_name = pretty_name

    @property
    def privacy_policy_url(self):
        """Gets the privacy_policy_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The privacy_policy_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._privacy_policy_url

    @privacy_policy_url.setter
    def privacy_policy_url(self, privacy_policy_url):
        """Sets the privacy_policy_url of this InspectionJobLogResponseLogOsRelease.


        :param privacy_policy_url: The privacy_policy_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._privacy_policy_url = privacy_policy_url

    @property
    def redhat_bugzilla_product(self):
        """Gets the redhat_bugzilla_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The redhat_bugzilla_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._redhat_bugzilla_product

    @redhat_bugzilla_product.setter
    def redhat_bugzilla_product(self, redhat_bugzilla_product):
        """Sets the redhat_bugzilla_product of this InspectionJobLogResponseLogOsRelease.


        :param redhat_bugzilla_product: The redhat_bugzilla_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._redhat_bugzilla_product = redhat_bugzilla_product

    @property
    def redhat_bugzilla_product_version(self):
        """Gets the redhat_bugzilla_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The redhat_bugzilla_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._redhat_bugzilla_product_version

    @redhat_bugzilla_product_version.setter
    def redhat_bugzilla_product_version(self, redhat_bugzilla_product_version):
        """Sets the redhat_bugzilla_product_version of this InspectionJobLogResponseLogOsRelease.


        :param redhat_bugzilla_product_version: The redhat_bugzilla_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._redhat_bugzilla_product_version = redhat_bugzilla_product_version

    @property
    def redhat_support_product(self):
        """Gets the redhat_support_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The redhat_support_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._redhat_support_product

    @redhat_support_product.setter
    def redhat_support_product(self, redhat_support_product):
        """Sets the redhat_support_product of this InspectionJobLogResponseLogOsRelease.


        :param redhat_support_product: The redhat_support_product of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._redhat_support_product = redhat_support_product

    @property
    def redhat_support_product_version(self):
        """Gets the redhat_support_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The redhat_support_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._redhat_support_product_version

    @redhat_support_product_version.setter
    def redhat_support_product_version(self, redhat_support_product_version):
        """Sets the redhat_support_product_version of this InspectionJobLogResponseLogOsRelease.


        :param redhat_support_product_version: The redhat_support_product_version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._redhat_support_product_version = redhat_support_product_version

    @property
    def support_url(self):
        """Gets the support_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The support_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._support_url

    @support_url.setter
    def support_url(self, support_url):
        """Sets the support_url of this InspectionJobLogResponseLogOsRelease.


        :param support_url: The support_url of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._support_url = support_url

    @property
    def variant(self):
        """Gets the variant of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The variant of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._variant

    @variant.setter
    def variant(self, variant):
        """Sets the variant of this InspectionJobLogResponseLogOsRelease.


        :param variant: The variant of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._variant = variant

    @property
    def variant_id(self):
        """Gets the variant_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The variant_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._variant_id

    @variant_id.setter
    def variant_id(self, variant_id):
        """Sets the variant_id of this InspectionJobLogResponseLogOsRelease.


        :param variant_id: The variant_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._variant_id = variant_id

    @property
    def version(self):
        """Gets the version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this InspectionJobLogResponseLogOsRelease.


        :param version: The version of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def version_codename(self):
        """Gets the version_codename of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The version_codename of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._version_codename

    @version_codename.setter
    def version_codename(self, version_codename):
        """Sets the version_codename of this InspectionJobLogResponseLogOsRelease.


        :param version_codename: The version_codename of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._version_codename = version_codename

    @property
    def version_id(self):
        """Gets the version_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501


        :return: The version_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this InspectionJobLogResponseLogOsRelease.


        :param version_id: The version_id of this InspectionJobLogResponseLogOsRelease.  # noqa: E501
        :type: str
        """

        self._version_id = version_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InspectionJobLogResponseLogOsRelease, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InspectionJobLogResponseLogOsRelease):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
